rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function getUserFacilities() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.facilities;
    }
    
    function isSuperAdmin() {
      return getUserRole() == 'super-admin';
    }
    
    function isFacilityAdmin() {
      return getUserRole() == 'facility-admin';
    }
    
    function canAccessFacility(facilityId) {
      return isSuperAdmin() || facilityId in getUserFacilities();
    }
    
    function canModify() {
      return getUserRole() in ['super-admin', 'facility-admin'];
    }
    
    function canPropose() {
      return getUserRole() in ['super-admin', 'facility-admin', 'standard-user'];
    }
    
    // Organizations
    match /organizations/{orgId} {
      allow read, write: if isSuperAdmin();
    }
    
    // Facilities
    match /facilities/{facilityId} {
      allow read: if isAuthenticated() && canAccessFacility(facilityId);
      allow write: if isAuthenticated() && canModify() && canAccessFacility(facilityId);
    }
    
    // Rooms
    match /rooms/{roomId} {
      allow read: if isAuthenticated() && canAccessFacility(resource.data.facilityId);
      allow write: if isAuthenticated() && canModify() && canAccessFacility(resource.data.facilityId);
    }
    
    // Tenants
    match /tenants/{tenantId} {
      allow read: if isAuthenticated() && canAccessFacility(resource.data.facilityId);
      allow write: if isAuthenticated() && canModify() && canAccessFacility(resource.data.facilityId);
    }
    
    // Rentals
    match /rentals/{rentalId} {
      allow read: if isAuthenticated() && canAccessFacility(resource.data.facilityId);
      allow write: if isAuthenticated() && canModify() && canAccessFacility(resource.data.facilityId);
      
      // Payment history subcollection
      match /paymentHistory/{paymentId} {
        allow read: if isAuthenticated() && canAccessFacility(get(/databases/$(database)/documents/rentals/$(rentalId)).data.facilityId);
        allow write: if isAuthenticated() && canModify() && canAccessFacility(get(/databases/$(database)/documents/rentals/$(rentalId)).data.facilityId);
      }
      
      // Documents subcollection
      match /documents/{docId} {
        allow read: if isAuthenticated() && canAccessFacility(get(/databases/$(database)/documents/rentals/$(rentalId)).data.facilityId);
        allow write: if isAuthenticated() && canModify() && canAccessFacility(get(/databases/$(database)/documents/rentals/$(rentalId)).data.facilityId);
      }
    }
    
    // Payments
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && canAccessFacility(resource.data.facilityId);
      allow create: if isAuthenticated() && canPropose() && canAccessFacility(resource.data.facilityId);
      allow update: if isAuthenticated() && canModify() && canAccessFacility(resource.data.facilityId);
    }
    
    // Proposals
    match /proposals/{proposalId} {
      allow read: if isAuthenticated() && canAccessFacility(resource.data.facilityId);
      allow create: if isAuthenticated() && canPropose() && canAccessFacility(resource.data.facilityId);
      allow update: if isAuthenticated() && canModify() && canAccessFacility(resource.data.facilityId);
    }
    
    // Complaints
    match /complaints/{complaintId} {
      allow read: if isAuthenticated() && canAccessFacility(resource.data.facilityId);
      allow write: if isAuthenticated() && canPropose() && canAccessFacility(resource.data.facilityId);
    }
    
    // Penalties
    match /penalties/{penaltyId} {
      allow read: if isAuthenticated() && canAccessFacility(resource.data.facilityId);
      allow write: if isAuthenticated() && canPropose() && canAccessFacility(resource.data.facilityId);
    }
    
    // Refunds
    match /refunds/{refundId} {
      allow read: if isAuthenticated() && canAccessFacility(resource.data.facilityId);
      allow write: if isAuthenticated() && canPropose() && canAccessFacility(resource.data.facilityId);
    }
    
    // Users
    match /users/{userId} {
      allow read: if isAuthenticated() && (isSuperAdmin() || userId == request.auth.uid);
      allow write: if isAuthenticated() && (isSuperAdmin() || (isFacilityAdmin() && userId != request.auth.uid));
    }
  }
}
